// $Id$

// Copyright (c) 2007-2015, Trustees of The Leland Stanford Junior University
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// Redistributions of source code must retain the above copyright notice, this
// list of conditions and the following disclaimer.
// Redistributions in binary form must reproduce the above copyright notice,
// this list of conditions and the following disclaimer in the documentation
// and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.

//8X8 mesh with 20 flits per packet under injection mode
//injection rate here is packet per cycle, NOT flit per cycle

// Topology

topology = wmesh;
k = 16;
n = 2;
m = 4; 
// Routing
routing_function = dor;

// Flow control
num_vcs     = 16; //For use_read_write, the number of VC's has to be 16
vc_buf_size = 2;
received_queue_size = 16;


wait_for_tail_credit = 1;



// Router architecture
vc_allocator = islip;
sw_allocator = islip;
alloc_iters  = 1;

credit_delay   = 1;
routing_delay  = 2;
vc_alloc_delay = 1;
sw_alloc_delay = 1;

input_speedup     = 2;
output_speedup    = 1;
internal_speedup  = 1.0;


// Traffic
traffic = uniform;
packet_size = 3;


// Simulation
sim_type = latency;

injection_rate = 0.0004;

mcast_switch = 0;

//mcast_injection_rate = 0.03; //deprecated

mcast_percent = 5;

num_mcast_dests = 8;

use_read_write = 1; //Number of VC's(num_vcs) must be 16 if set to 1
read_reply_size = 2;
write_reply_size = 2;

//latency_thres = 20000.0;

watch_flits = 307;
watch_out = ./watch_folder/flit_307.txt;
